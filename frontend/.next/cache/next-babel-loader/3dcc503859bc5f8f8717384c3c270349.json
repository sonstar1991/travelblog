{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from \"isomorphic-fetch\";\nimport { API } from \"../config\";\nimport { isAuth, handleResponse } from \"./auth\";\nexport const userPublicProfile = username => {\n  return fetch(`${API}/user/${username}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  }).then(response => {\n    handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getProfile = token => {\n  return fetch(`${API}/user/profile`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const update = (token, user) => {\n  return fetch(`${API}/user/update`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    //the form data\n    body: user\n  }).then(response => {\n    handleResponse(response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const follow = (userId, token, followId) => {\n  return fetch(`${API}/user/follow`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: _JSON$stringify({\n      userId,\n      followId\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const unfollow = (userId, token, unfollowId) => {\n  return fetch(`${API}/user/unfollow`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: _JSON$stringify({\n      userId,\n      unfollowId\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/huirenchuah/Desktop/travelblog/frontend/actions/user.js"],"names":["fetch","API","isAuth","handleResponse","userPublicProfile","username","method","headers","Accept","then","response","json","catch","err","console","log","getProfile","token","Authorization","update","user","body","follow","userId","followId","unfollow","unfollowId"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-fetch\";\nimport { API } from \"../config\";\nimport { isAuth,handleResponse } from \"./auth\";\n\n\nexport const userPublicProfile = username => {\n  return fetch(`${API}/user/${username}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  })\n    .then(response => {\n      handleResponse(response)\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n\nexport const getProfile = token => {\n  return fetch(`${API}/user/profile`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  })\n    .then(response => {\n      handleResponse(response)\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const update = (token, user) => {\n  return fetch(`${API}/user/update`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    //the form data\n    body: user\n  })\n  \n    .then(response => {\n      handleResponse(response)\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n\nexport const follow = (userId, token, followId) => {\n  return fetch(`${API}/user/follow`, {\n      method: \"PUT\",\n      headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ userId, followId })\n  })\n      .then(response => {\n          return response.json();\n      })\n      .catch(err => console.log(err));\n};\n\nexport const unfollow = (userId, token, unfollowId) => {\n  return fetch(`${API}/user/unfollow`, {\n      method: \"PUT\",\n      headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ userId, unfollowId })\n  })\n      .then(response => {\n          return response.json();\n      })\n      .catch(err => console.log(err));\n};"]},"metadata":{},"sourceType":"module"}