{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/huirenchuah/Desktop/travelblog/frontend/pages/profile/[username].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../../components/Layout\";\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport { userPublicProfile } from \"../../actions/user\";\nimport { API, DOMAIN, APP_NAME } from \"../../config\";\nimport BlogCard from \"../../components/blog/BlogCard\";\nimport moment from \"moment\";\nimport FollowProfileButton from \"../../components/auth/FollowProfile\";\nimport { isAuth, getCookie } from \"../../actions/auth\";\nimport { useState, useEffect } from \"react\";\n\nvar UserProfile = function UserProfile(_ref) {\n  var user = _ref.user,\n      blogs = _ref.blogs,\n      query = _ref.query;\n\n  var head = function head() {\n    return __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, user.username, \" | \", APP_NAME), __jsx(\"meta\", {\n      name: \"description\",\n      content: \"Blogs by \".concat(user.username),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), __jsx(\"link\", {\n      rel: \"canonical\",\n      href: \"\".concat(DOMAIN, \"/profile/\").concat(query.username),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      property: \"og:title\",\n      content: \"\".concat(user.username, \"| \").concat(APP_NAME),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      property: \"og:description\",\n      content: \"Blogs by \".concat(user.username),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      property: \"og:type\",\n      content: \"webiste\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      property: \"og:url\",\n      content: \"\".concat(DOMAIN, \"/profile/\").concat(query.username),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      property: \"og:site_name\",\n      content: \"\".concat(APP_NAME),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  };\n\n  var showUserBlogs = function showUserBlogs() {\n    return blogs.map(function (blog, i) {\n      return __jsx(\"div\", {\n        className: \"mt-4 mb-4\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: \"/blogs/\".concat(blog.slug),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, blog.title)));\n    });\n  };\n\n  var _useState = useState({\n    following: false\n  }),\n      isFollowing = _useState[0],\n      setFollowing = _useState[1]; // const [userFollowing, setUserFollowing] = useState({\n  //   user: { following: [] }\n  // });\n  // const [userFollowers, setUserFollowers] = useState({\n  //   user: { followers: [] }\n  // });\n\n\n  var checkFollow = function checkFollow(user) {\n    var jwt = isAuth();\n    var match = user.followers.find(function (follower) {\n      return follower._id === jwt.user._id;\n    });\n    return match;\n  };\n\n  var init = function init(username) {\n    var token = isAuth().token;\n    userPublicProfile(username, token).then(function (data) {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        var following = checkFollow(data);\n        setFollowing({\n          user: data,\n          following: following\n        });\n      }\n    });\n  }; // useEffect(() => {\n  //   const username = match.params.username\n  //   init(username)\n  // }, []);\n  // const loadUserFollowers = user => {\n  //   userPublicProfile(user).then(data => {\n  //     if (data.error) {\n  //       console.log(data.error);\n  //     } else {\n  //       let following = this.checkFollow(data);\n  //       setFollowing({ following:userFollowers });\n  //     }\n  //   });\n  // };\n  // const init= userId =>{\n  //   const token = isAuth().token\n  //   read(userId, token).then(data=>{\n  //     if(data.error){\n  //       console.log(data.error)\n  //     }\n  //     else {\n  //       let following = this.checkFollow(data)\n  //       setFollowing({following})\n  //     }\n  //   })\n  // }\n\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, head(), __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-md-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: \"text-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, user.name), __jsx(\"p\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Joined \", moment(user.createdAt).fromNow()), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), isAuth() && __jsx(FollowProfileButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), _JSON$stringify(user)), __jsx(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"\".concat(API, \"/user/photo/\").concat(user.username),\n    className: \"img img-fluid img-thumbnail mb-3 mt-3\",\n    style: {\n      height: \"300px\",\n      width: \"100%\"\n    },\n    alt: \"user profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })))))))), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"container pb-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card-body text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, __jsx(\"h5\", {\n    className: \"card-title bg-primary pt-4 pb-4 pl-4 pr-4 text-white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Recent blogs by \", user.name), showUserBlogs())))))));\n};\n\nUserProfile.getInitialProps = function (_ref2) {\n  var query = _ref2.query;\n  return userPublicProfile(query.username).then(function (data) {\n    if (data.error) {\n      console.log(data.error);\n    } else {\n      //   console.log(data);\n      return {\n        user: data.user,\n        blogs: data.blogs,\n        query: query\n      };\n    }\n  });\n};\n\nexport default UserProfile;","map":{"version":3,"sources":["/Users/huirenchuah/Desktop/travelblog/frontend/pages/profile/[username].js"],"names":["Layout","Link","Head","userPublicProfile","API","DOMAIN","APP_NAME","BlogCard","moment","FollowProfileButton","isAuth","getCookie","useState","useEffect","UserProfile","user","blogs","query","head","username","showUserBlogs","map","blog","i","slug","title","following","isFollowing","setFollowing","checkFollow","jwt","match","followers","find","follower","_id","init","token","then","data","error","console","log","name","createdAt","fromNow","height","width","getInitialProps"],"mappings":"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","sourcesContent":["import Layout from \"../../components/Layout\";\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport { userPublicProfile } from \"../../actions/user\";\nimport { API, DOMAIN, APP_NAME } from \"../../config\";\nimport BlogCard from \"../../components/blog/BlogCard\";\nimport moment from \"moment\";\nimport FollowProfileButton from \"../../components/auth/FollowProfile\";\nimport { isAuth, getCookie } from \"../../actions/auth\";\nimport { useState, useEffect } from \"react\";\n\nconst UserProfile = ({ user, blogs, query }) => {\n  const head = () => (\n    <Head>\n      <title>\n        {user.username} | {APP_NAME}\n      </title>\n      <meta name=\"description\" content={`Blogs by ${user.username}`} />\n      <link rel=\"canonical\" href={`${DOMAIN}/profile/${query.username}`} />\n      <meta property=\"og:title\" content={`${user.username}| ${APP_NAME}`} />\n      <meta property=\"og:description\" content={`Blogs by ${user.username}`} />\n      <meta property=\"og:type\" content=\"webiste\" />\n      <meta property=\"og:url\" content={`${DOMAIN}/profile/${query.username}`} />\n      <meta property=\"og:site_name\" content={`${APP_NAME}`} />\n    </Head>\n  );\n\n  const showUserBlogs = () => {\n    return blogs.map((blog, i) => {\n      return (\n        <div className=\"mt-4 mb-4\" key={i}>\n          <Link href={`/blogs/${blog.slug}`}>\n            <a className=\"lead\">{blog.title}</a>\n          </Link>\n        </div>\n      );\n    });\n  };\n\n  const [isFollowing, setFollowing] = useState({ following: false });\n  // const [userFollowing, setUserFollowing] = useState({\n  //   user: { following: [] }\n  // });\n  // const [userFollowers, setUserFollowers] = useState({\n  //   user: { followers: [] }\n  // });\n\n  const checkFollow = user => {\n    const jwt = isAuth();\n\n    const match = user.followers.find(follower => {\n      return follower._id === jwt.user._id;\n    });\n    return match;\n  };\n\n  const init = username =>{\n    const token = isAuth().token;\n    userPublicProfile(username, token).then(data=>{\n      if(data.error){\n        console.log(data.error)\n      }\n      else{\n        let following = checkFollow(data)\n        setFollowing({user:data, following})\n      }\n    })\n  }\n\n\n\n\n\n\n\n  // useEffect(() => {\n  //   const username = match.params.username\n  //   init(username)\n  // }, []);\n\n  // const loadUserFollowers = user => {\n  //   userPublicProfile(user).then(data => {\n  //     if (data.error) {\n  //       console.log(data.error);\n  //     } else {\n  //       let following = this.checkFollow(data);\n  //       setFollowing({ following:userFollowers });\n  //     }\n  //   });\n  // };\n\n  // const init= userId =>{\n  //   const token = isAuth().token\n  //   read(userId, token).then(data=>{\n  //     if(data.error){\n  //       console.log(data.error)\n  //     }\n  //     else {\n  //       let following = this.checkFollow(data)\n  //       setFollowing({following})\n  //     }\n  //   })\n  // }\n\n  return (\n    <React.Fragment>\n      {head()}\n      <Layout>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"card mt-3\">\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                    <div className=\"col-md-8\">\n                      <h2 className=\"text-bold\">{user.name}</h2>\n                      <p className=\"text-muted\">\n                        Joined {moment(user.createdAt).fromNow()}\n                      </p>\n                      <br />\n\n                      {/* <p className=\"text-muted\">{user.about}</p> */}\n                    {isAuth() && <FollowProfileButton />}  \n                    {JSON.stringify(user)}\n                    \n                    </div>\n                    <div className=\"col-md-4\">\n                      <img\n                        src={`${API}/user/photo/${user.username}`}\n                        className=\"img img-fluid img-thumbnail mb-3 mt-3\"\n                        style={{ height: \"300px\", width: \"100%\" }}\n                        alt=\"user profile\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <br />\n        <div className=\"container pb-5\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"card\">\n                <div className=\"card-body text-center\">\n                  <h5 className=\"card-title bg-primary pt-4 pb-4 pl-4 pr-4 text-white\">\n                    Recent blogs by {user.name}\n                  </h5>\n\n                  {showUserBlogs()}\n                </div>\n              </div>\n            </div>\n            {/* <div className=\"col-md-6\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title bg-primary pt-4 pb-4 pl-4 pr-4 text-white\">\n                    Message {user.name}\n                  </h5>\n                  <br />\n                  <p>contact form</p>\n                </div>\n              </div>\n            </div> */}\n          </div>\n        </div>\n      </Layout>\n    </React.Fragment>\n  );\n};\n\nUserProfile.getInitialProps = ({ query }) => {\n  return userPublicProfile(query.username).then(data => {\n    if (data.error) {\n      console.log(data.error);\n    } else {\n      //   console.log(data);\n\n      return {\n        user: data.user,\n        blogs: data.blogs,\n        query,\n       \n      };\n    }\n  });\n};\n\nexport default UserProfile;\n"]},"metadata":{},"sourceType":"module"}