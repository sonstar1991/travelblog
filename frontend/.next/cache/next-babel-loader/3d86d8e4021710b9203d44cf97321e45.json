{"ast":null,"code":"var _jsxFileName = \"/Users/huirenchuah/Desktop/travelblog/frontend/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport Slider from \"../components/Slider\";\nimport RecentCard from \"../components/Recent\";\nimport { listBlogsWithCategoriesAndTags } from \"../actions/blog\";\n\nconst Index = ({\n  blogs\n}) => {\n  const showAllBlogs = () => {\n    return blogs.map((blog, i) => __jsx(\"div\", {\n      className: \"container\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(\"article\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, __jsx(RecentCard, {\n      blog: blog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })))));\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Slider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), showAllBlogs()));\n};\n\nIndex.getInitialProps = () => {\n  let skip = 0;\n  let limit = 6;\n  return listBlogsWithCategoriesAndTags(skip, limit).then(data => {\n    if (data.error) {\n      console.log(data.error);\n    } else {\n      console.log(data);\n      return {\n        blogs: data.blogs // blog: data,\n\n      };\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/huirenchuah/Desktop/travelblog/frontend/pages/index.js"],"names":["Layout","Slider","RecentCard","listBlogsWithCategoriesAndTags","Index","blogs","showAllBlogs","map","blog","i","getInitialProps","skip","limit","then","data","error","console","log"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,8BAAT,QAA+C,iBAA/C;;AAIA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAGzB,QAAMC,YAAY,GAAG,MAAM;AACzB,WAAOD,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KACf;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEA,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,MAAA,IAAI,EAAED,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADE,CADF,CADK,CAAP;AASD,GAVD;;AAYA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGIF,YAAY,EAHhB,CADA,CADF;AAUD,CAzBD;;AA+BAF,KAAK,CAACM,eAAN,GAAwB,MAAM;AAC5B,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,SAAOT,8BAA8B,CAACQ,IAAD,EAAOC,KAAP,CAA9B,CAA4CC,IAA5C,CAAiDC,IAAI,IAAI;AAC9D,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,aAAO;AACLT,QAAAA,KAAK,EAAES,IAAI,CAACT,KADP,CAEL;;AAFK,OAAP;AAID;AACF,GAVM,CAAP;AAWD,CAdD;;AAgBA,eAAeD,KAAf","sourcesContent":["import Layout from \"../components/Layout\";\nimport Slider from \"../components/Slider\";\nimport RecentCard from \"../components/Recent\";\nimport { listBlogsWithCategoriesAndTags } from \"../actions/blog\";\n\n\n\nconst Index = ({blogs}) => {\n  \n\n  const showAllBlogs = () => {\n    return blogs.map((blog, i) => (\n      <div className=\"container\" key={i}>\n        <div className=\"row\">\n      <article >\n        <RecentCard blog={blog} />\n      </article>\n      </div>\n      </div>\n    ));\n  };\n\n  return (\n    <React.Fragment>\n    <Layout>\n      <Slider />\n     \n       {showAllBlogs()}\n  \n    </Layout>\n    </React.Fragment>\n  );\n};\n\n\n\n\n\nIndex.getInitialProps = () => {\n  let skip = 0;\n  let limit = 6;\n  return listBlogsWithCategoriesAndTags(skip, limit).then(data => {\n    if (data.error) {\n      console.log(data.error);\n    } else {\n      console.log(data)\n      return {\n        blogs: data.blogs\n        // blog: data,\n      };\n    }\n  });\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}