{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from \"isomorphic-fetch\";\nimport { API } from \"../config\";\nimport cookie from \"js-cookie\";\nexport const signup = user => {\n  return fetch(`${API}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: _JSON$stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const signin = user => {\n  return fetch(`${API}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: _JSON$stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //set cookie\n\nexport const setCookie = (key, value) => {\n  //check if its running on browser\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = key => {\n  //check if its running on browser\n  if (false) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; //get cookie\n\nexport const getCookie = key => {\n  //check if its running on browser\n  if (false) {\n    cookie.get(key);\n  }\n}; //local storage\n\nexport const setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, _JSON$stringify(value));\n  }\n};\nexport const removeLocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n}; //auth user by passing data to cookie and local storage\n\nexport const authenticate = (data, next) => {\n  //send from backend\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n}; //get the info from local storage \n\nexport const isAuth = () => {\n  if (false) {\n    const cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/huirenchuah/Desktop/travelblog/frontend/actions/auth.js"],"names":["fetch","API","cookie","signup","user","method","headers","Accept","body","then","response","json","catch","err","console","log","signin","setCookie","key","value","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeLocalStorage","removeItem","authenticate","data","next","token","isAuth","cookieChecked","getItem","JSON","parse"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,MAAMC,MAAM,GAAGC,IAAI,IAAI;AAC5B,SAAOJ,KAAK,CAAE,GAAEC,GAAI,SAAR,EAAkB;AAC5BI,IAAAA,MAAM,EAAE,MADoB;AAE5BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFmB;AAM5BC,IAAAA,IAAI,EAAE,gBAAeJ,IAAf;AANsB,GAAlB,CAAL,CAQJK,IARI,CAQCC,QAAQ,IAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAVI,EAWJC,KAXI,CAWEC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXT,CAAP;AAYD,CAbM;AAeP,OAAO,MAAMG,MAAM,GAAGZ,IAAI,IAAI;AAC5B,SAAOJ,KAAK,CAAE,GAAEC,GAAI,SAAR,EAAkB;AAC5BI,IAAAA,MAAM,EAAE,MADoB;AAE5BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFmB;AAM5BC,IAAAA,IAAI,EAAE,gBAAeJ,IAAf;AANsB,GAAlB,CAAL,CAQJK,IARI,CAQCC,QAAQ,IAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAVI,EAWJC,KAXI,CAWEC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXT,CAAP;AAYD,CAbM,C,CAeP;;AACA,OAAO,MAAMI,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACvC;AACA,aAAqB;AACnBjB,IAAAA,MAAM,CAACkB,GAAP,CAAWF,GAAX,EAAgBC,KAAhB,EAAuB;AACrBE,MAAAA,OAAO,EAAE;AADY,KAAvB;AAGD;AACF,CAPM;AASP,OAAO,MAAMC,YAAY,GAAGJ,GAAG,IAAI;AACjC;AACA,aAAqB;AACnBhB,IAAAA,MAAM,CAACqB,MAAP,CAAcL,GAAd,EAAmB;AACjBG,MAAAA,OAAO,EAAE;AADQ,KAAnB;AAGD;AACF,CAPM,C,CAQP;;AAEA,OAAO,MAAMG,SAAS,GAAGN,GAAG,IAAI;AAC9B;AACA,aAAqB;AACnBhB,IAAAA,MAAM,CAACuB,GAAP,CAAWP,GAAX;AACD;AACF,CALM,C,CAOP;;AAEA,OAAO,MAAMQ,eAAe,GAAE,CAACR,GAAD,EAAKC,KAAL,KAAa;AACzC,aAAmB;AACjBQ,IAAAA,YAAY,CAACC,OAAb,CAAqBV,GAArB,EAA0B,gBAAeC,KAAf,CAA1B;AACD;AACF,CAJM;AAMP,OAAO,MAAMU,kBAAkB,GAAGX,GAAD,IAAO;AACtC,aAAmB;AACjBS,IAAAA,YAAY,CAACG,UAAb,CAAwBZ,GAAxB;AACD;AACF,CAJM,C,CAMP;;AACA,OAAO,MAAMa,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAc;AACxC;AACAhB,EAAAA,SAAS,CAAC,OAAD,EAAUe,IAAI,CAACE,KAAf,CAAT;AACAR,EAAAA,eAAe,CAAC,MAAD,EAASM,IAAI,CAAC5B,IAAd,CAAf;AACA6B,EAAAA,IAAI;AACL,CALM,C,CAQP;;AACA,OAAO,MAAME,MAAM,GAAC,MAAI;AACtB,aAAmB;AACjB,UAAMC,aAAa,GAAGZ,SAAS,CAAC,OAAD,CAA/B;;AACA,QAAGY,aAAH,EAAiB;AACf,UAAGT,YAAY,CAACU,OAAb,CAAqB,MAArB,CAAH,EAAgC;AAC9B,eAAOC,IAAI,CAACC,KAAL,CAAWZ,YAAY,CAACU,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD,OAFD,MAEK;AACH,eAAO,KAAP;AACD;AACF;AACF;AACF,CAXM","sourcesContent":["import fetch from \"isomorphic-fetch\";\nimport { API } from \"../config\";\nimport cookie from \"js-cookie\";\n\nexport const signup = user => {\n  return fetch(`${API}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const signin = user => {\n  return fetch(`${API}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n//set cookie\nexport const setCookie = (key, value) => {\n  //check if its running on browser\n  if (process.browser) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\n\nexport const removeCookie = key => {\n  //check if its running on browser\n  if (process.browser) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n};\n//get cookie\n\nexport const getCookie = key => {\n  //check if its running on browser\n  if (process.browser) {\n    cookie.get(key);\n  }\n};\n\n//local storage\n\nexport const setLocalStorage =(key,value)=>{\n  if(process.browser){\n    localStorage.setItem(key, JSON.stringify(value))\n  }\n}\n\nexport const removeLocalStorage =(key)=>{\n  if(process.browser){\n    localStorage.removeItem(key)\n  }\n}\n\n//auth user by passing data to cookie and local storage\nexport const authenticate = (data, next)=>{\n  //send from backend\n  setCookie('token', data.token)\n  setLocalStorage('user', data.user)\n  next();\n}\n\n\n//get the info from local storage \nexport const isAuth=()=>{\n  if(process.browser){\n    const cookieChecked = getCookie('token')\n    if(cookieChecked){\n      if(localStorage.getItem('user')){\n        return JSON.parse(localStorage.getItem('user'))\n      }else{\n        return false\n      }\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}