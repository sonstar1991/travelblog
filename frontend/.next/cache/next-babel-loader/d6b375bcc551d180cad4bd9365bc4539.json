{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from \"isomorphic-fetch\";\nimport { API } from \"../config\";\nimport cookie from \"js-cookie\";\nimport Router from 'next/router';\nexport const handleResponse = response => {\n  if (response.status === 401) {\n    removeCookie('token');\n    removeLocalStorage('user');\n    Router.push({\n      pathname: '/signin',\n      query: {\n        message: 'Your session is expired. Please signin'\n      }\n    });\n  }\n};\nexport const signup = user => {\n  return fetch(`${API}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: _JSON$stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const signin = user => {\n  return fetch(`${API}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: _JSON$stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const signout = next => {\n  removeCookie('token');\n  removeLocalStorage('user');\n  next();\n  return fetch(`${API}/signout`, {\n    method: \"GET\"\n  }).then(response => {\n    console.log('signout success');\n  }).catch(err => console.log(err));\n}; //set cookie\n\nexport const setCookie = (key, value) => {\n  //check if its running on browser\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = key => {\n  //check if its running on browser\n  if (false) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; //get cookie\n\nexport const getCookie = key => {\n  //check if its running on browser\n  if (false) {\n    return cookie.get(key);\n  }\n}; //local storage\n\nexport const setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, _JSON$stringify(value));\n  }\n};\nexport const removeLocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n}; //auth user by passing data to cookie and local storage\n\nexport const authenticate = (data, next) => {\n  //send from backend\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n}; //get the info from local storage \n\nexport const isAuth = () => {\n  if (false) {\n    const cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};\nexport const updateUser = (user, next) => {\n  if (false) {\n    if (localStorage.getItem('user')) {\n      let auth = JSON.parse(localStorage.getItem('user'));\n      auth = user;\n      localStorage.setItem('user', _JSON$stringify(auth));\n      next();\n    }\n  }\n};","map":{"version":3,"sources":["/Users/huirenchuah/Desktop/travelblog/frontend/actions/auth.js"],"names":["fetch","API","cookie","Router","handleResponse","response","status","removeCookie","removeLocalStorage","push","pathname","query","message","signup","user","method","headers","Accept","body","then","json","catch","err","console","log","signin","signout","next","setCookie","key","value","set","expires","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeItem","authenticate","data","token","isAuth","cookieChecked","getItem","JSON","parse","updateUser","auth"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-fetch\";\nimport { API } from \"../config\";\nimport cookie from \"js-cookie\";\nimport Router from 'next/router'\n\n\nexport const handleResponse = response =>{\n  if(response.status ===401){\n    removeCookie('token')\n    removeLocalStorage('user')\n    Router.push({\n      pathname:'/signin',\n      query:{\n        message: 'Your session is expired. Please signin'\n      }\n    })\n  }\n\n}\n\n\nexport const signup = user => {\n  return fetch(`${API}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const signin = user => {\n  return fetch(`${API}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n\nexport const signout = (next) =>{\n  removeCookie('token')\n  removeLocalStorage('user')\n  next()\n\n  return fetch(`${API}/signout`,{\n    method: \"GET\"\n  })\n  .then (response=>{\n    console.log('signout success')\n  })\n  .catch(err=> console.log(err))\n}\n\n\n\n\n\n\n//set cookie\nexport const setCookie = (key, value) => {\n  //check if its running on browser\n  if (process.browser) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\n\nexport const removeCookie = key => {\n  //check if its running on browser\n  if (process.browser) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n};\n//get cookie\n\nexport const getCookie = key => {\n  //check if its running on browser\n  if (process.browser) {\n    return cookie.get(key);\n  }\n};\n\n//local storage\n\nexport const setLocalStorage =(key,value)=>{\n  if(process.browser){\n    localStorage.setItem(key, JSON.stringify(value))\n  }\n}\n\nexport const removeLocalStorage =(key)=>{\n  if(process.browser){\n    localStorage.removeItem(key)\n  }\n}\n\n//auth user by passing data to cookie and local storage\nexport const authenticate = (data, next)=>{\n  //send from backend\n  setCookie('token', data.token)\n  setLocalStorage('user', data.user)\n  next();\n}\n\n\n//get the info from local storage \nexport const isAuth=()=>{\n  if(process.browser){\n    const cookieChecked = getCookie('token')\n    if(cookieChecked){\n      if(localStorage.getItem('user')){\n        return JSON.parse(localStorage.getItem('user'))\n      }else{\n        return false\n      }\n    }\n  }\n}\n\nexport const updateUser = (user, next) => {\n  if (process.browser) {\n      if (localStorage.getItem('user')) {\n          let auth = JSON.parse(localStorage.getItem('user'));\n          auth = user;\n          localStorage.setItem('user', JSON.stringify(auth));\n          next();\n      }\n  }\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}