{"ast":null,"code":"import fetch from \"isomorphic-fetch\";\nimport { API } from \"../config\";\nimport queryString from \"query-string\";\nimport { isAuth, handleResponse } from \"./auth\";\nexport var createBlog = function createBlog(blog, token) {\n  var createBlogEndpoint;\n\n  if (isAuth() && isAuth().role === 1) {\n    createBlogEndpoint = \"\".concat(API, \"/blog\");\n  } else if (isAuth() && isAuth().role === 0) {\n    createBlogEndpoint = \"\".concat(API, \"/user/blog\");\n  }\n\n  return fetch(\"\".concat(createBlogEndpoint), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: blog\n  }).then(function (response) {\n    handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listBlogsWithCategoriesAndTags = function listBlogsWithCategoriesAndTags(skip, limit) {\n  var data = {\n    limit: limit,\n    skip: skip\n  };\n  return fetch(\"\".concat(API, \"/blogs-categories-tags\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(function (response) {\n    handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var singleBlog = function singleBlog(slug) {\n  return fetch(\"\".concat(API, \"/blog/\").concat(slug), {\n    method: \"GET\"\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listRelated = function listRelated(blog) {\n  return fetch(\"\".concat(API, \"/blogs/related\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(blog)\n  }).then(function (response) {\n    handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var list = function list(username) {\n  var listBlogsEndpoint;\n\n  if (username) {\n    listBlogsEndpoint = \"\".concat(API, \"/\").concat(username, \"/blogs\");\n  } else {\n    listBlogsEndpoint = \"\".concat(API, \"/blogs\");\n  }\n\n  return fetch(\"\".concat(listBlogsEndpoint), {\n    method: \"GET\"\n  }).then(function (response) {\n    handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var removeBlog = function removeBlog(slug, token) {\n  var removeBlogEndpoint;\n\n  if (isAuth() && isAuth().role === 1) {\n    removeBlogEndpoint = \"\".concat(API, \"/blog/\").concat(slug);\n  } else if (isAuth() && isAuth().role === 0) {\n    removeBlogEndpoint = \"\".concat(API, \"/user/blog/\").concat(slug);\n  }\n\n  return fetch(\"\".concat(removeBlogEndpoint), {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var updateBlog = function updateBlog(blog, token, slug) {\n  var updateBlogEndpoint;\n\n  if (isAuth() && isAuth().role === 1) {\n    updateBlogEndpoint = \"\".concat(API, \"/blog/\").concat(slug);\n  } else if (isAuth() && isAuth().role === 0) {\n    updateBlogEndpoint = \"\".concat(API, \"/user/blog/\").concat(slug);\n  }\n\n  return fetch(\"\".concat(updateBlogEndpoint), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: blog\n  }).then(function (response) {\n    handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listSearch = function listSearch(params) {\n  console.log(\"search params\", params); //will something like that {search='node'}\n\n  var query = queryString.stringify(params); //?limit=100&pagination=10\n\n  console.log(\"query params\", query);\n  return fetch(\"\".concat(API, \"/blogs/search?\").concat(query), {\n    method: \"GET\"\n  }).then(function (response) {\n    handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var like = function like(userId, token, blogId) {\n  return fetch(\"\".concat(API, \"/blog/like\"), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify({\n      userId: userId,\n      blogId: blogId\n    })\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var unlike = function unlike(userId, token, blogId) {\n  return fetch(\"\".concat(API, \"/blog/unlike\"), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify({\n      userId: userId,\n      blogId: blogId\n    })\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["/Users/huirenchuah/Desktop/travelblog/frontend/actions/blog.js"],"names":["fetch","API","queryString","isAuth","handleResponse","createBlog","blog","token","createBlogEndpoint","role","method","headers","Accept","Authorization","body","then","response","json","err","console","log","listBlogsWithCategoriesAndTags","skip","limit","data","JSON","stringify","singleBlog","slug","listRelated","list","username","listBlogsEndpoint","removeBlog","removeBlogEndpoint","updateBlog","updateBlogEndpoint","listSearch","params","query","like","userId","blogId","unlike"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-fetch\";\nimport { API } from \"../config\";\nimport queryString from \"query-string\";\nimport { isAuth, handleResponse } from \"./auth\";\n\nexport const createBlog = (blog, token) => {\n  let createBlogEndpoint;\n\n  if (isAuth() && isAuth().role === 1) {\n    createBlogEndpoint = `${API}/blog`;\n  } else if (isAuth() && isAuth().role === 0) {\n    createBlogEndpoint = `${API}/user/blog`;\n  }\n\n  return fetch(`${createBlogEndpoint}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: blog\n  })\n    .then(response => {\n      handleResponse(response);\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const listBlogsWithCategoriesAndTags = (skip, limit) => {\n  const data = {\n    limit,\n    skip\n  };\n  return fetch(`${API}/blogs-categories-tags`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  })\n    .then(response => {\n      handleResponse(response);\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const singleBlog = slug => {\n  return fetch(`${API}/blog/${slug}`, {\n    method: \"GET\"\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const listRelated = blog => {\n  return fetch(`${API}/blogs/related`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(blog)\n  })\n    .then(response => {\n      handleResponse(response);\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const list = username => {\n  let listBlogsEndpoint;\n\n  if (username) {\n    listBlogsEndpoint = `${API}/${username}/blogs`;\n  } else {\n    listBlogsEndpoint = `${API}/blogs`;\n  }\n\n  return fetch(`${listBlogsEndpoint}`, {\n    method: \"GET\"\n  })\n    .then(response => {\n      handleResponse(response);\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const removeBlog = (slug, token) => {\n  let removeBlogEndpoint;\n\n  if (isAuth() && isAuth().role === 1) {\n    removeBlogEndpoint = `${API}/blog/${slug}`;\n  } else if (isAuth() && isAuth().role === 0) {\n    removeBlogEndpoint = `${API}/user/blog/${slug}`;\n  }\n\n  return fetch(`${removeBlogEndpoint}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  })\n    .then(response => {\n      handleResponse(response);\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const updateBlog = (blog, token, slug) => {\n  let updateBlogEndpoint;\n\n  if (isAuth() && isAuth().role === 1) {\n    updateBlogEndpoint = `${API}/blog/${slug}`;\n  } else if (isAuth() && isAuth().role === 0) {\n    updateBlogEndpoint = `${API}/user/blog/${slug}`;\n  }\n\n  return fetch(`${updateBlogEndpoint}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: blog\n  })\n    .then(response => {\n      handleResponse(response);\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const listSearch = params => {\n  console.log(\"search params\", params); //will something like that {search='node'}\n  let query = queryString.stringify(params); //?limit=100&pagination=10\n  console.log(\"query params\", query);\n  return fetch(`${API}/blogs/search?${query}`, {\n    method: \"GET\"\n  })\n    .then(response => {\n      handleResponse(response);\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const like = (userId, token, blogId) => {\n  return fetch(`${API}/blog/like`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({ userId, blogId })\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const unlike = (userId, token, blogId) => {\n  return fetch(`${API}/blog/unlike`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({ userId, blogId })\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n"]},"metadata":{},"sourceType":"module"}