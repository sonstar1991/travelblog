{"ast":null,"code":"var _jsxFileName = \"/Users/huirenchuah/Desktop/travelblog/frontend/pages/tags/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../../components/Layout\";\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport { singleTag } from \"../../actions/tag\";\nimport { API, DOMAIN, APP_NAME } from \"../../config\";\nimport BlogCard from \"../../components/blog/BlogCard\";\n\nconst Tag = ({\n  tag,\n  blogs,\n  query\n}) => {\n  const head = () => __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, tag.name, \" | \", APP_NAME), __jsx(\"meta\", {\n    name: \"description\",\n    content: `Best travel blogging site on ${tag.name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    rel: \"canonical\",\n    href: `${DOMAIN}/tags/${query.slug}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${tag.name}| ${APP_NAME}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: `Best travel blogging site on ${tag.name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"website\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `${DOMAIN}/tag/${query.slug}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:site_name\",\n    content: `${APP_NAME}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, head(), __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container-fluid text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-md-12 pt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"display-4 font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, tag.name), blogs.map((b, i) => __jsx(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(BlogCard, {\n    key: i,\n    blog: b,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })))))))));\n};\n\nTag.getInitialProps = ({\n  query\n}) => {\n  return singleTag(query.slug).then(data => {\n    if (data.error) {\n      console.log(data.error);\n    } else {\n      return {\n        tag: data.tag,\n        blogs: data.blogs,\n        query\n      };\n    }\n  });\n};\n\nexport default Tag;","map":{"version":3,"sources":["/Users/huirenchuah/Desktop/travelblog/frontend/pages/tags/[slug].js"],"names":["Layout","Link","Head","singleTag","API","DOMAIN","APP_NAME","BlogCard","Tag","tag","blogs","query","head","name","slug","map","b","i","getInitialProps","then","data","error","console","log"],"mappings":"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","sourcesContent":["import Layout from \"../../components/Layout\";\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport { singleTag } from \"../../actions/tag\";\nimport { API, DOMAIN, APP_NAME } from \"../../config\";\nimport BlogCard from \"../../components/blog/BlogCard\";\n\nconst Tag = ({ tag,blogs, query  }) => {\n  const head = () => (\n    <Head>\n      <title>\n        {tag.name} | {APP_NAME}\n      </title>\n      <meta\n        name=\"description\"\n        content={`Best travel blogging site on ${tag.name}`}\n      />\n      <link rel=\"canonical\" href={`${DOMAIN}/tags/${query.slug}`} />\n      <meta property=\"og:title\" content={`${tag.name}| ${APP_NAME}`} />\n      <meta\n        property=\"og:description\"\n        content={`Best travel blogging site on ${tag.name}`}\n      />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={`${DOMAIN}/tag/${query.slug}`} />\n      <meta property=\"og:site_name\" content={`${APP_NAME}`} />\n\n      {/* <meta property=\"og:image\" content={`${DOMAIN}/static/images/seoblog.jpg`} />\n            <meta property=\"og:image:secure_url\" content={`${DOMAIN}/static/images/seoblog.jpg`} />\n            <meta property=\"og:image:type\" content=\"image/jpg\" />\n            <meta property=\"fb:app_id\" content={`${FB_APP_ID}`} /> */}\n    </Head>\n  );\n\n  return (\n    <React.Fragment>\n      {head()}\n\n      <Layout>\n        <main>\n          <div className=\"container-fluid text-center\">\n            <header>\n              <div className=\"col-md-12 pt-3\">\n                <h1 className=\"display-4 font-weight-bold\">{tag.name}</h1>\n                {blogs.map((b, i) => (\n                                    <section>\n                                        <BlogCard key={i} blog={b} />\n                                        <hr />\n                                    </section>\n                                ))}\n              </div>\n            </header>\n          </div>\n        </main>\n      </Layout>\n    </React.Fragment>\n  );\n};\n\nTag.getInitialProps = ({ query }) => {\n  return singleTag(query.slug).then(data => {\n    if (data.error) {\n      console.log(data.error);\n    } else {\n      return { tag: data.tag, blogs: data.blogs ,query };\n    }\n  });\n};\n\nexport default Tag;\n"]},"metadata":{},"sourceType":"module"}