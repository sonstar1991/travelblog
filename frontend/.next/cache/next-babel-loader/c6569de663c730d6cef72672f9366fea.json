{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from \"isomorphic-fetch\";\nimport { API } from \"../config\";\nimport cookie from \"js-cookie\";\nimport Router from \"next/router\";\nexport const handleResponse = response => {\n  if (response.status === 401) {\n    signout(() => {\n      Router.push({\n        pathname: \"/signin\",\n        query: {\n          message: \"Your session is expired. Please signin.\"\n        }\n      });\n    });\n  } else {\n    return;\n  }\n};\nexport const preSignup = user => {\n  return fetch(`${API}/pre-signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: _JSON$stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const signup = user => {\n  return fetch(`${API}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: _JSON$stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const signin = user => {\n  return fetch(`${API}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: _JSON$stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const signout = next => {\n  removeCookie(\"token\");\n  removeLocalStorage(\"user\");\n  next();\n  return fetch(`${API}/signout`, {\n    method: \"GET\"\n  }).then(response => {\n    console.log(\"signout success\");\n  }).catch(err => console.log(err));\n}; //set cookie\n\nexport const setCookie = (key, value) => {\n  //check if its running on browser\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = key => {\n  //check if its running on browser\n  if (false) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; //get cookie\n\nexport const getCookie = key => {\n  //check if its running on browser\n  if (false) {\n    return cookie.get(key);\n  }\n}; //local storage\n\nexport const setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, _JSON$stringify(value));\n  }\n};\nexport const removeLocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n}; //auth user by passing data to cookie and local storage\n\nexport const authenticate = (data, next) => {\n  //send from backend\n  setCookie(\"token\", data.token);\n  setLocalStorage(\"user\", data.user);\n  next();\n}; //get the info from local storage\n\nexport const isAuth = () => {\n  if (false) {\n    const cookieChecked = getCookie(\"token\");\n\n    if (cookieChecked) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      } else {\n        return false;\n      }\n    }\n  }\n};\nexport const updateUser = (user, next) => {\n  if (false) {\n    if (localStorage.getItem(\"user\")) {\n      let auth = JSON.parse(localStorage.getItem(\"user\"));\n      auth = user;\n      localStorage.setItem(\"user\", _JSON$stringify(auth));\n      next();\n    }\n  }\n};\nexport const forgotPassword = email => {\n  return fetch(`${API}/forgot-password`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: _JSON$stringify(email)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const resetPassword = resetInfo => {\n  return fetch(`${API}/reset-password`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: _JSON$stringify(resetInfo)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const loginWithGoogle = user => {\n  return fetch(`${API}/google-login`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/huirenchuah/Desktop/travelblog/frontend/actions/auth.js"],"names":["fetch","API","cookie","Router","handleResponse","response","status","signout","push","pathname","query","message","preSignup","user","method","headers","Accept","body","then","json","catch","err","console","log","signup","signin","next","removeCookie","removeLocalStorage","setCookie","key","value","set","expires","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeItem","authenticate","data","token","isAuth","cookieChecked","getItem","JSON","parse","updateUser","auth","forgotPassword","email","resetPassword","resetInfo","loginWithGoogle"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-fetch\";\nimport { API } from \"../config\";\nimport cookie from \"js-cookie\";\nimport Router from \"next/router\";\n\nexport const handleResponse = response => {\n  if (response.status === 401) {\n    signout(() => {\n      Router.push({\n        pathname: \"/signin\",\n        query: {\n          message: \"Your session is expired. Please signin.\"\n        }\n      });\n    });\n  } else {\n    return;\n  }\n};\n\n\n\n\nexport const preSignup = user => {\n  return fetch(`${API}/pre-signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n\n\n\nexport const signup = user => {\n  return fetch(`${API}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const signin = user => {\n  return fetch(`${API}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const signout = next => {\n  removeCookie(\"token\");\n  removeLocalStorage(\"user\");\n  next();\n\n  return fetch(`${API}/signout`, {\n    method: \"GET\"\n  })\n    .then(response => {\n      console.log(\"signout success\");\n    })\n    .catch(err => console.log(err));\n};\n\n//set cookie\nexport const setCookie = (key, value) => {\n  //check if its running on browser\n  if (process.browser) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\n\nexport const removeCookie = key => {\n  //check if its running on browser\n  if (process.browser) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n};\n//get cookie\n\nexport const getCookie = key => {\n  //check if its running on browser\n  if (process.browser) {\n    return cookie.get(key);\n  }\n};\n\n//local storage\n\nexport const setLocalStorage = (key, value) => {\n  if (process.browser) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\n\nexport const removeLocalStorage = key => {\n  if (process.browser) {\n    localStorage.removeItem(key);\n  }\n};\n\n//auth user by passing data to cookie and local storage\nexport const authenticate = (data, next) => {\n  //send from backend\n  setCookie(\"token\", data.token);\n  setLocalStorage(\"user\", data.user);\n  next();\n};\n\n//get the info from local storage\nexport const isAuth = () => {\n  if (process.browser) {\n    const cookieChecked = getCookie(\"token\");\n    if (cookieChecked) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      } else {\n        return false;\n      }\n    }\n  }\n};\n\nexport const updateUser = (user, next) => {\n  if (process.browser) {\n    if (localStorage.getItem(\"user\")) {\n      let auth = JSON.parse(localStorage.getItem(\"user\"));\n      auth = user;\n      localStorage.setItem(\"user\", JSON.stringify(auth));\n      next();\n    }\n  }\n};\n\n\n\n\nexport const forgotPassword = email => {\n  return fetch(`${API}/forgot-password`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(email)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n\n\nexport const resetPassword = resetInfo => {\n  return fetch(`${API}/reset-password`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(resetInfo)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const loginWithGoogle = user => {\n  return fetch(`${API}/google-login`, {\n      method: 'POST',\n      headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n  })\n      .then(response => {\n          return response.json();\n      })\n      .catch(err => console.log(err));\n};"]},"metadata":{},"sourceType":"module"}